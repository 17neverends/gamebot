export const game_name_text = {
    "tetris": {
        "ru": "–¢–µ—Ç—Ä–∏—Å",
        "gb": "Tetris",
        "in": "‡§ü‡•á‡§ü‡•ç‡§∞‡§ø‡§∏"
    },
    "minisweeper": {
        "ru": "–°–∞–ø—ë—Ä",
        "gb": "Minesweeper",
        "in": "‡§Æ‡§æ‡§á‡§® ‡§∏‡•ç‡§µ‡•Ä‡§™‡§∞"
    },
    "wordle": {
        "ru": "–í–æ—Ä–¥–ª–∏",
        "gb": "Wordle",
        "in": "‡§µ‡•ã‡§∞‡•ç‡§°‡§≤"
    },
    "sudoku": {
        "ru": "–°—É–¥–æ–∫—É",
        "gb": "Sudoku",
        "in": "‡§∏‡•Å‡§°‡•ã‡§ï‡•Ç"
    },
    "spotting": {
        "ru": "–ü—è—Ç–Ω–∞—à–∫–∏",
        "gb": "Spotting",
        "in": "‡§∏‡•ç‡§™‡•â‡§ü‡§ø‡§Ç‡§ó"
    },
    "tiktaktoe": {
        "ru": "–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
        "gb": "Tic Tac Toe",
        "in": "‡§ü‡§ø‡§ï ‡§ü‡•à‡§ï ‡§ü‡•â‡§á"
    }
}


export const congratilations_text = {
    "ru": "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
    "gb": "Congratulations!",
    "in": "‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤!"
}

export const new_game_text = {
    "ru": "–ù–æ–≤–∞—è –∏–≥—Ä–∞",
    "gb": "New game",
    "in": "‡§®‡§Ø‡§æ ‡§ñ‡•á‡§≤"
}

export const start_game_text = {
    "ru": "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
    "gb": "Start game",
    "in": "‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç"
}

export const won_text = {
    "ru": "–ø–æ–±–µ–¥–∏–ª!",
    "gb": "won!",
    "in": "‡§ú‡•Ä‡§§‡§æ!"
}

export const draw_text = {
    "ru": "–ù–∏—á—å—è!",
    "gb": "Draw!",
    "in": "‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§!"
}

export const enemy_win = {
    "ru": "O –ø–æ–±–µ–¥–∏–ª!",
    "gb": "O won!",
    "in": "O ‡§ú‡•Ä‡§§‡§æ!"
}

export const empty_leaderboard_text = {
    "ru": "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞",
    "gb": "Leaderboard is empty",
    "in": "‡§≤‡•Ä‡§°‡§∞‡§¨‡•ã‡§∞‡•ç‡§° ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•à"
}

export const result_title_text = {
    "ru": "–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã",
    "gb": "Result game",
    "in": "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§ñ‡•á‡§≤"
}

export const seconds_text = {
    "ru": "—Å–µ–∫",
    "gb": "sec",
    "in": "‡§∏‡•á‡§ï‡§Ç‡§°"
}

export const welcome_text = {
    "ru": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PlayInChatüéÆ, ",
    "gb": "Welcome to PlayInChatüéÆ, ",
    "in": "PlayInChat ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•àüéÆ, "
}

export const difficulty_text = {
    "ru": "–°–ª–æ–∂–Ω–æ—Å—Ç—å",
    "gb": "Difficulty",
    "in": "‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ"
}

export const flags_text = {
    "ru": "–§–ª–∞–∂–∫–æ–≤",
    "gb": "Flags",
    "in": "‡§ö‡§ø‡§π‡•ç‡§®"
}

export const difficulty_ranking_text = {
    "easy": {
        "ru": "–õ–µ–≥–∫–∞—è",
        "gb": "Easy",
        "in": "‡§∏‡§æ‡§ß‡§æ‡§∞‡§£"
    },
    "medium": {
        "ru": "–°—Ä–µ–¥–Ω—è—è",
        "gb": "Medium",
        "in": "‡§Æ‡§ß‡•ç‡§Ø"
    },
    "hard": {
        "ru": "–°–ª–æ–∂–Ω–∞—è",
        "gb": "Hard",
        "in": "‡§¨‡§°‡§º‡§æ"
    }
}

export const minesweeper_ranking_text = {
    "–õ–µ–≥–∫–∞—è": {
        "ru": "–õ–µ–≥–∫–∞—è",
        "gb": "Easy",
        "in": "‡§∏‡§æ‡§ß‡§æ‡§∞‡§£"
    },
    "–°—Ä–µ–¥–Ω—è—è": {
        "ru": "–°—Ä–µ–¥–Ω—è—è",
        "gb": "Medium",
        "in": "‡§Æ‡§ß‡•ç‡§Ø"
    },
    "–°–ª–æ–∂–Ω–∞—è": {
        "ru": "–°–ª–æ–∂–Ω–∞—è",
        "gb": "Hard",
        "in": "‡§¨‡§°‡§º‡§æ"
    }
}

export const points_text = {
    "ru": "–æ—á–∫–æ–≤",
    "gb": "points",
    "in": "‡§™‡•â‡§á‡§Ç‡§ü‡•ç‡§∏"
}

export function getWinMessage(time_count, count_changes) { 
    return {
        "ru": `–í—ã –ø–æ–±–µ–¥–∏–ª–∏! –í—Ä–µ–º—è: ${(new Date() - time_count) / 1000} —Å–µ–∫—É–Ω–¥, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–¥–æ–≤: ${count_changes}`,
        "gb": `You won! Time: ${(new Date() - time_count) / 1000} seconds, number of moves: ${count_changes}`,
        "in": `‡§Ü‡§™ ‡§ú‡•Ä‡§§‡•á ‡§π‡•à‡§Ç! ‡§∏‡§Æ‡§Ø: ${(new Date() - time_count) / 1000} ‡§∏‡•á‡§ï‡§Ç‡§°, ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ö‡§≤‡§æ‡§µ: ${count_changes}`
    }
}


export function getWinMessageSudoku(time_count) { 
    return {
        "ru": `–í—ã –ø–æ–±–µ–¥–∏–ª–∏! –í—Ä–µ–º—è: ${(new Date() - time_count) / 1000} —Å–µ–∫—É–Ω–¥`,
        "gb": `You won! Time: ${(new Date() - time_count) / 1000} seconds`,
        "in": `‡§Ü‡§™ ‡§ú‡•Ä‡§§‡•á ‡§π‡•à‡§Ç! ‡§∏‡§Æ‡§Ø: ${(new Date() - time_count) / 1000} ‡§∏‡•á‡§ï‡§Ç‡§°`
    }
}


export function getWinMessageTetris(currentLines) {
    return {
        "ru": `–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${currentLines}`,
        "gb": `Game over! Your result: ${currentLines}`,
        "in": `‡§ñ‡•á‡§≤ ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à! ‡§Ü‡§™‡§ï‡§æ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: ${currentLines}`
    }
}

export const rules_text = {
    "ru": "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã",
    "gb": "Game rules",
    "in": "‡§ñ‡•á‡§≤ ‡§ï‡•á ‡§®‡§ø‡§Ø‡§Æ"
}

export const continue_text = {
    "ru": "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É",
    "gb": "Continue game",
    "in": "‡§ñ‡•á‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç"
}

export const rules_points_text = {
    "1": {
        "ru": "–°–ª–æ–≤–æ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 –±—É–∫–≤.",
        "gb": "The word is made up of 5 letters.",
        "in": "‡§∂‡§¨‡•ç‡§¶ 5 ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡§æ ‡§π‡•à‡•§"
    },
    "2": {
        "ru": "–ö–∞–∂–¥–∞—è –±—É–∫–≤–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.",
        "gb": "Each letter can be used only once.",
        "in": "‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡•ã ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§™‡§π‡§≤‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§"
    },
    "3": {
        "ru": "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—É–∫–≤—ã –≤—ã–¥–µ–ª–µ–Ω—ã –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º.",
        "gb": "The correct letters are highlighted in green.",
        "in": "‡§∏‡§π‡•Ä ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§≤‡§æ‡§≤ ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§"
    },
    "4": {
        "ru": "–ë—É–∫–≤—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ —Å–ª–æ–≤–æ, –Ω–æ –Ω–µ —Å–≤–æ–µ–π –ø–æ–∑–∏—Ü–∏–∏, –≤—ã–¥–µ–ª–µ–Ω—ã –∂–µ–ª—Ç—ã–º —Ü–≤–µ—Ç–æ–º.",
        "gb": "Letters that are in the word but not in the correct position are highlighted in yellow.",
        "in": "‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§≤‡§æ‡§≤ ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§"
    },
    "5": {
        "ru": "–ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ —É–≥–∞–¥–∞–Ω–æ –∑–∞ 6 –ø–æ–ø—ã—Ç–æ–∫, –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.",
        "gb": "If the word is not guessed within 6 attempts, the game ends.",
        "in": "6 ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§∂‡§¨‡•ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ, ‡§ñ‡•á‡§≤ ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§"
    }
}

export const enter_text = {
    "ru": "–í–≤–æ–¥",
    "gb": "Enter",
    "in": "‡§è‡§Ç‡§ü‡§∞"
}

export const delete_text = {
    "ru": "–£–¥–∞–ª–∏—Ç—å",
    "gb": "Delete",
    "in": "‡§°‡§ø‡§≤‡•Ä‡§ü"
}

export const wordle_lost_status = {
    "ru": "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ:",
    "gb": "You lost! Correct word:",
    "in": "‡§Ü‡§™ ‡§≤‡•ã‡§∏ ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à! ‡§∏‡§π‡•Ä ‡§∂‡§¨‡•ç‡§¶:"
}

export const wordle_win_status = {
    "ru": "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ!",
    "gb": "Congratulations! You guessed the word!",
    "in": "‡§¨‡§ß‡§æ‡§à ‡§π‡•ã! ‡§Ü‡§™‡§ï‡•ã ‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡§ø‡§≤‡§æ!"
}

export const wordle_dict_error_text = {
    "ru": "–°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä–µ!",
    "gb": "Word not found in dictionary!",
    "in": "‡§∂‡§¨‡•ç‡§¶ ‡§°‡§ø‡§ï‡•ç‡§∂‡§®‡§æ‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ!"
}

export const score_text_new = {
    "ru": "–°—á–µ—Ç",
    "gb": "Score",
    "in": "‡§∏‡•ç‡§ï‡•ã‡§∞"
}

export const score_text = {
    "ru": "–°—á–µ—Ç",
    "gb": "Score",
    "in": "‡§∏‡•ç‡§ï‡•ã‡§∞"
}


export const wordle_size_error_text = {
    "ru": "–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –±—É–∫–≤",
    "gb": "Word should be made up of 5 letters",
    "in": "‡§∂‡§¨‡•ç‡§¶ 5 ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡§æ ‡§π‡•à‡•§"
}

export const keyboard_text = {
    "ru": "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é",
    "gb": "qwertyuiopasdfghjklzxcvbnm",
    "in": "‡§Ö‡§Ü‡§á‡§à‡§â‡§ä‡§ã‡§è‡§ê‡§ì‡§î‡§Ö‡§Ç‡§Ö‡§É‡§ï‡§ñ‡§ó‡§ò‡§ô‡§ö‡§õ‡§ú‡§ù‡§û‡§ü‡§†‡§°‡§¢‡§£‡§§‡§•‡§¶‡§ß‡§®‡§™‡§´‡§¨‡§≠‡§Æ‡§Ø‡§∞‡§≤‡§µ‡§∂‡§∑‡§∏‡§π"
}
